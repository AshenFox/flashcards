@import "@styles/vars";

.gallery {
  display: block;
  padding: 2rem;
  transform: translateY(-100%);
  transform-origin: top;
  transition: all 0.3s;
}

.container {
  display: block;
  overflow: hidden;
  height: 0;
  border-top: 1px solid var(--element-border-color);
  transition: all 0.3s;
  visibility: hidden;

  &.active {
    height: 25.5rem;
    visibility: inherit;

    & .gallery {
      transform: translateY(0);
    }
  }
}

.form {
  width: 45%;
  min-width: 40rem;

  @media (max-width: $mobile) {
    width: 100%;
    min-width: 100%;
  }
}

.icon {
  cursor: pointer;
}

.input {
  padding-left: 1rem;

  .icon {
    fill: var(--icon-fill);
  }

  :global(.input__input) {
    &:not(:placeholder-shown) {
      & ~ .icon {
        fill: var(--success-color);
      }
    }
  }
}

.results {
  position: relative;
  margin-top: 2rem;
}

/* .carousel {
  z-index: 20;
  display: flex;
  height: 15rem;
  justify-content: center;
  transition: all 0.2s;
  transition-delay: 0.2s;

  &.hide {
    opacity: 0;
    transition-delay: 0;
    visibility: hidden;
  }
} */

/* .window {
  overflow: hidden;
  width: 68rem;

  &.game {
    width: 51rem;
  }

  @media screen and (width <= 62.5em) {
    width: 51rem;
    min-width: 51rem;
  }

  @media screen and (width <= 50em) {
    width: 34rem;
    min-width: 34rem;
  }

  @media screen and (width <= 37.5em) {
    width: 17rem;
    min-width: 17rem;
  }
} */

/* .track {
  display: flex;
  width: 0;
  height: 100%;
  padding: 0 1rem;
  transform: translateX(0);
  transition: all 0.3s;
} */

/* .item {
  min-width: 15rem;
  height: 15rem;
  cursor: pointer;
  transition: all 0.3s;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  &:not(:last-child) {
    margin-right: 2rem;
  }

  &:hover {
    border: 5px solid var(--active-color);
  }
} */

/* 
.control {
  &.left {
    margin-right: 1rem;
  }

  &.right {
    margin-left: 1rem;
  }

  &.left button svg {
    transform: translate(-12px, -10px);
  }

  &.right button svg {
    transform: translate(-7.5px, -10px);
  }

  button:hover {
    svg {
      fill: var(--stronger-accentuated-color);
    }
  }

  &.left,
  &.right {
    position: relative;
    align-self: center;

    button {
      width: 4rem;
      height: 4rem;
      background-color: $secondary;

      svg {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 2rem;
        height: 2rem;
        fill: $white;
        transition: all 0.2s;
      }
    }

    &[data-active="false"] {
      button {
        background-color: $grey-medium;
        cursor: auto;

        svg {
          fill: $grey-light;
        }

        &:hover {
          svg {
            fill: $grey-light;
          }
        }
      }
    }
  }
} */
